name: Print Tag

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      new_core_tag: 
        description: 'New variable for the action'
        required: false

env:
  CORE_TAG: ${{ github.event.inputs.new_core_tag }}

jobs:
  print_tag:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Print github.ref
        run: |
          echo "Name from  github.ref : ${{ github.ref }}"

      - name: Set Environment Variable ENV
        run: |
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo "ENV=prod" >> $GITHUB_ENV
            echo "CORE_TAG=$(python3 GetTag.py ${{ secrets.GET_TAG }})" >> $GITHUB_ENV   
            echo "triggered from  push main"
          elif [ "${{ github.ref }}" == "refs/heads/dev" ] || [ "${{ env.CORE_TAG }}" == "latest" ]; then
            echo "CORE_TAG=latest" >> $GITHUB_ENV
            echo "ENV=dev" >> $GITHUB_ENV
            echo "triggered from tag from push dev or latest from core"
          elif [ 'python3 -c "import re; exit(0 if re.match('^v[0-9]+\.[0-9]+\.[0-9]+$', '${{ env.CORE_TAG }}') else 1)"' ]; then
            echo "ENV=prod" >> $GITHUB_ENV
            echo $CORE_TAG
            echo "triggered from tag from core"
          fi

      - name: Print GET_TAG as last tag core
        run: |
          echo "Name from GET_TAG: $CORE_TAG"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker build
        run: |
          docker build --build-arg ALPINE_VERSION=$LAST_CORE_TAG -t my_image . --load
