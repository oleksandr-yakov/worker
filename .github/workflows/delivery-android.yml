name: Print Tag

on:
  push:
    branches: [ main, dev ]
  workflow_dispatch:
    inputs:
      new_core_tag: 
        description: 'New variable for the action'
        required: false

env:
  CORE_TAG: ${{ github.event.inputs.new_core_tag }}

jobs:
  print_tag:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Print github.ref
        run: |
          echo "Name from  github.ref : ${{ github.ref }}"
          echo "OLD_CORE_TAG=$(python3 GetTag.py --get_max_tag ${{ secrets.GET_TAG }})" >> $GITHUB_ENV
          echo "TAG_VALID=$(python3 GetTag.py --check_tag ${{ env.CORE_TAG }})" >> $GITHUB_ENV

      - name: Print oldest TAG core
        run: |
          echo "Name from  OLD_CORE_TAG : $OLD_CORE_TAG"

      - name: Set Environment Variable ENV
        run: |  
          if [ "${{ env.TAG_VALID }}" ]; then
            echo "ENV=prod" >> $GITHUB_ENV
            echo $CORE_TAG
            echo "triggered from tag from core"
          elif [ "${{ github.ref }}" == "refs/heads/dev" ] || [ "${{ env.CORE_TAG }}" == "latest" ]; then
            echo "CORE_TAG=latest" >> $GITHUB_ENV
            echo "ENV=dev" >> $GITHUB_ENV
            echo "triggered from tag from push dev or latest from core"
          elif [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo "ENV=prod" >> $GITHUB_ENV
            echo "CORE_TAG=$(python3 GetTag.py --get_max_tag ${{ secrets.GET_TAG }})" >> $GITHUB_ENV   
            echo "triggered from  push main"
          fi          


      - name: Print GET_TAG as last tag core
        run: |
          echo "Name from CORE_TAG: $CORE_TAG"
          echo "ENV is: $ENV"
          echo "TAG_VALID is: ${{ env.TAG_VALID }}"


